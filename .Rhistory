install.packages("devtools")
library(devtools)
find_rtools()
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y<- x-3
y
z<- c(1.1, 9.3.14)
z<- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0.10)
c(1,2,3,4)+ c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each = 10)
num_vect <- (0.5, 55. -10, 6)
num_vect <- c(0.5, 55. -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf<- num_vect<1
tf
num_vect >= 6
my_char <- "my" "name" "is"
my_char <- c("my" "name" "is")
my_char <- c("My" "name" "is")
my_char <- c("My" ,"name", "is")
my_char
paste my_char, collapse = " ")
paste(my_char, collapse = " ")
c(my_char, "Tony Stark")
my_name <- c(my_char, "Tony", "Stark")
my_name <- c(my_char, "Tony Stark")
my_name
paste(my_name, collapse = " ")
paste("hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44,NA,5,NA)
x*3
y<- rnorm(1000)
z<-rep(NA,1000)
my_data <- sample(c(y,z), 100)
Call is.na() on my_data
call?
call
call
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
c(x[3], x[5], x[7])
v<- c(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar =2, norf= NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data = 1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix2, patients)
cbind(patients, my_matrix2)
cbind(patients, my_matirx)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
add2 <- function(x,y){
x+y
}
add2
add2
add2(54,3)
x <- 1:20
above (x)
above (x)
above <- function(x,n){
use <- x>n
x[use]
}
above(20)
x<- 1:20
above(x,3)
above(x)
above <- function(x,n=10){
use <- x>n
x[use]
}
above(x)
columnmean <-function (y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[, i])
}
}
columnmeans(my_matrix)
columnmean(my_matrix)
columnmean(my_matrix2)
my_matrix2
columnmean <-function (y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(my_matrix2)
columnmean <-function (y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[, i], na.rm= removeNA)
}
means
}
}
columnmean <-function (y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[, i], na.rm= removeNA)
}
means
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
y <- if(x < 3) {
NA
} else {
10
}
x <- 1:10
if(x > 5) {
x <- 0
}
swirl()
library(swirl)
swirl()
setwd("~/RWorkspace/ProgrammingAssignment2")
cachesolve <- function (x, ...){
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
makeCacheMatrix <- function(x=numeric()) {
i <- NULL
get <- function() {x}
setinv <-function(inverse) {i <<- inverse}
getinv <- function() {i}
list( get = get,
setinv = setinv,
getinv = getinv)
}
